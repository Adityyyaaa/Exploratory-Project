
#include <stdio.h>
int main()
{
    int a[2][5],b[3][5],c[5][3],product[3][3];
    int i,j,m,flag=1;
    int sum=0;
    //print the given matrix
    printf("Enter the elements of matrix a:\n");
    for(i=0;i<2;i++)
    {
        for(j=0;j<5;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("the matrix is:\n");
    for(i=0;i<2;i++)
    {
        for(j=0;j<5;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    //print the generator matrix for(5,3)code
    printf("Enter the elements of generator matrix :\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<5;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    printf("the generator matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<5;j++)
        {
            printf("%d ",b[i][j]);
        }
        printf("\n");
    }
    //transpose of generator matrix
    for(i=0;i<5;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j]=b[j][i];
        }
    }
    for(i=0;i<2;i++)
    {
        for(j=0;j<3;j++)
        {
            for(m=0;m<5;m++)
            {
                sum+=a[i][m]*c[m][j];
            }
            product[i][j]=sum;
            if(product[i][j]>1)
            {
                product[i][j]=product[i][j]%2;
            }
            sum=0;
        }
    }
    //check whether product is null matrix or not
    for(i=0;i<2;i++)
    {
        for(j=0;j<3;j++)
        {
            if(product[i][j]!=0)
            {
                flag=0;
                break;
            }
        }
    }
    if(flag==1)
    {
        printf("Parity check matrix");
    }
    else
    {
        printf("Not parity check matrix");
    }
       
         return 0;
}


OUTPUT---


Enter the elements of matrix a:
0
1
1
1
0
1
1
1
0
1
the matrix is:
0 1 1 1 0 
1 1 1 0 1 
Enter the elements of generator matrix :
1
0
0
0
1
0
1
0
1
1
0
0
1
1
1
the generator matrix is:
1 0 0 0 1 
0 1 0 1 1 
0 0 1 1 1 
Parity check matrix